'use client'

import { useState } from 'react'

export default function EmailNotifyTest() {
  const [isTestingConnection, setIsTestingConnection] = useState(false)
  const [testResult, setTestResult] = useState<string | null>(null)
  const [isSendingTest, setIsSendingTest] = useState(false)

  const testConnection = async () => {
    setIsTestingConnection(true)
    setTestResult(null)
    
    try {
      const response = await fetch('/api/line-notify', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          subject: 'üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Gmail SMTP',
          message: 'üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Gmail SMTP\n\n‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏´‡πá‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥! ‚úÖ',
          todoData: null
        }),
      })

      if (response.ok) {
        setTestResult('‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Gmail ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì')
      } else {
        const error = await response.json()
        setTestResult(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.error}`)
      }
    } catch (error) {
      setTestResult(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: ${error}`)
    } finally {
      setIsTestingConnection(false)
    }
  }

  const sendTestMessage = async () => {
    setIsSendingTest(true)
    
    try {
      const testTodo = {
        id: 'test-' + Date.now(),
        title: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Email Notification',
        description: '‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° Todo ‡πÉ‡∏´‡∏°‡πà',
        category: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö',
        priority: 'medium' as const,
        dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 ‡∏ß‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤
        completed: false,
        createdAt: new Date().toISOString()
      }

      const response = await fetch('/api/line-notify', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          subject: 'ÔøΩ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Todo Notification',
          message: 'Test message',
          todoData: testTodo
        }),
      })

      if (response.ok) {
        alert('‡∏™‡πà‡∏á test email ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Gmail ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì')
      } else {
        const error = await response.json()
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.error}`)
      }
    } catch (error) {
      alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error}`)
    } finally {
      setIsSendingTest(false)
    }
  }

  return (
    <div className="max-w-2xl mx-auto p-6">
      <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-6">
          ÔøΩ Gmail SMTP Notification Settings
        </h1>

        <div className="space-y-4">
          {/* Status */}
          <div className="p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
            <h2 className="text-lg font-semibold text-blue-900 dark:text-blue-100 mb-2">
              ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
            </h2>
            <p className="text-blue-800 dark:text-blue-200">
              {process.env.NODE_ENV === 'development' ? (
                <>
                  ‚úÖ Development mode - ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö<br/>
                  üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå .env.local ‡∏ß‡πà‡∏≤‡∏°‡∏µ Gmail credentials ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                </>
              ) : (
                'üöÄ Production mode'
              )}
            </p>
          </div>

          {/* Test Buttons */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <button
              onClick={testConnection}
              disabled={isTestingConnection}
              className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${
                isTestingConnection
                  ? 'bg-gray-400 cursor-not-allowed text-gray-700'
                  : 'bg-green-600 hover:bg-green-700 text-white'
              }`}
            >
              {isTestingConnection ? '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö...' : 'üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠'}
            </button>

            <button
              onClick={sendTestMessage}
              disabled={isSendingTest}
              className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${
                isSendingTest
                  ? 'bg-gray-400 cursor-not-allowed text-gray-700'
                  : 'bg-purple-600 hover:bg-purple-700 text-white'
              }`}
            >
              {isSendingTest ? '‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á...' : 'ÔøΩ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö'}
            </button>
          </div>

          {/* Test Result */}
          {testResult && (
            <div className={`p-4 rounded-lg ${
              testResult.includes('‚úÖ') 
                ? 'bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-200' 
                : 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200'
            }`}>
              {testResult}
            </div>
          )}

          {/* Setup Guide */}
          <div className="p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
            <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-3">
              üìö ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Gmail SMTP
            </h3>
            <div className="space-y-3 text-sm text-gray-700 dark:text-gray-300">
              <div>
                <h4 className="font-semibold text-gray-900 dark:text-white">1. ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô 2-Step Verification</h4>
                <p>‡πÑ‡∏õ‡∏ó‡∏µ‡πà <a href="https://myaccount.google.com/security" target="_blank" rel="noopener noreferrer" className="text-blue-600 dark:text-blue-400 hover:underline">Google Account Security</a> ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô 2-Step Verification</p>
              </div>
              
              <div>
                <h4 className="font-semibold text-gray-900 dark:text-white">2. ‡∏™‡∏£‡πâ‡∏≤‡∏á App Password</h4>
                <p>‡πÑ‡∏õ‡∏ó‡∏µ‡πà <a href="https://myaccount.google.com/apppasswords" target="_blank" rel="noopener noreferrer" className="text-blue-600 dark:text-blue-400 hover:underline">Google App Passwords</a> ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á password ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö app</p>
              </div>

              <div>
                <h4 className="font-semibold text-gray-900 dark:text-white">3. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô .env.local</h4>
                <code className="block p-3 bg-gray-800 text-green-400 rounded mt-2 whitespace-pre-wrap">
{`# Gmail SMTP Configuration
GMAIL_EMAIL=your_email@gmail.com
GMAIL_APP_PASSWORD=your_16_character_app_password
NOTIFICATION_EMAIL=recipient@gmail.com  # (optional - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà GMAIL_EMAIL)`}
                </code>
              </div>

              <div>
                <h4 className="font-semibold text-gray-900 dark:text-white">4. Restart Development Server</h4>
                <code className="block p-2 bg-gray-800 text-green-400 rounded mt-1">
                  npm run dev
                </code>
              </div>
            </div>
          </div>

          {/* Features */}
          <div className="p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg">
            <h3 className="text-lg font-semibold text-yellow-900 dark:text-yellow-100 mb-3">
              ‚ú® ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥ Email Notification
            </h3>
            <ul className="space-y-1 text-sm text-yellow-800 dark:text-yellow-200">
              <li>ÔøΩ ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° todo ‡πÉ‡∏´‡∏°‡πà</li>
              <li>üé® ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏• HTML ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°</li>
              <li>üì± ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô mobile</li>
              <li>üÜì ‡∏ü‡∏£‡∏µ (‡πÉ‡∏ä‡πâ Gmail SMTP)</li>
              <li>üîß ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÑ‡∏î‡πâ (subject, recipient)</li>
              <li>ÔøΩ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</li>
            </ul>
          </div>

          {/* Back to Todos */}
          <div className="pt-4">
            <a
              href="/todos"
              className="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200"
            >
              ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Todo List
            </a>
          </div>
        </div>
      </div>
    </div>
  )
}
