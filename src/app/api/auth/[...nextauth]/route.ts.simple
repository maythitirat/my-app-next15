import NextAuth from 'next-auth'
import Credentials from 'next-auth/providers/credentials'

const handler = NextAuth({
  providers: [
    Credentials({
      credentials: {
        email: { label: 'Email', type: 'email' },
        password: { label: 'Password', type: 'password' }
      },
      async authorize(credentials) {
        console.log('Authorize called with:', credentials)
        
        const validUsers = [
          { id: '1', email: 'admin@example.com', password: 'password', name: 'Admin User' },
          { id: '2', email: 'user@example.com', password: 'password', name: 'Regular User' },
          { id: '3', email: 'test@test.com', password: 'test', name: 'Test User' },
        ]
        
        const user = validUsers.find(u => 
          u.email === credentials?.email && u.password === credentials?.password
        )
        
        if (user) {
          console.log('Login successful for', user.email)
          return {
            id: user.id,
            name: user.name,
            email: user.email,
          }
        }
        
        console.log('Login failed - invalid credentials')
        return null
      },
    }),
  ],
  session: {
    strategy: 'jwt',
  },
  callbacks: {
    async jwt({ token, user }) {
      if (user) {
        token.id = user.id
      }
      return token
    },
    async session({ session, token }) {
      if (token && session.user) {
        session.user.id = token.id as string
      }
      return session
    },
  },
})

export { handler as GET, handler as POST }
